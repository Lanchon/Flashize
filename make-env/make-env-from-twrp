#!/bin/bash

set -e

img="$1"
zip="$2"
env="$3"

version="$("../flashize" "--version")"

if [ "$zip" == "-" ]; then
    zip="twrp-env/$(basename "$img" .img).zip"
fi

echo "********************************************************************************"
echo "IMG: $img"
echo "ZIP: $zip"
echo "ENV: $env"
echo "********************************************************************************"
echo
echo

td=/tmp/flashize-env-make-env-from-twrp

error() {
    >&2 echo "$@"
}

fatal() {
    error "$@"
    exit 1
}

if [ $# -lt 2 ]; then
    fatal "Usage: <input-twrp-img> <output-env-zip> [<env-alias> [extra-commands...]]"
fi

rm -f "$zip"

rm -rf $td
mkdir -p $td

img="$(readlink -f "$img")"

cd aik
./cleanup.sh
./unpackimg.sh "$img"
cd ..

echo
echo

rd=aik/ramdisk
base=$td/flashize

mkdir -p $base

mkdir $base/env
mkdir $base/env-setup

#mkdir $base/env/dev
#mkdir $base/env/proc
#mkdir $base/env/sys
#mkdir $base/env/tmp

cp -r $rd/sbin $base/env/sbin
mkdir $base/env/sbin-extra
cp -r $rd/etc $base/env/etc
cp -r $rd/license $td/license-env

for f in $(cat twrp-rm-sbin); do
    rm -f $base/env/sbin/$f
done

for f in $(cat twrp-rm-etc); do
    rm  $base/env/etc/$f
done

eval "${@:4}"

echo "*** absolute symlinks:"
for link in $base/env/sbin/*; do
    target="$(readlink "$link")" || true
    if [ "${target::1}" == "/" ]; then
        msg="${link:${#td}} -> $target"
        prefix="/sbin/"
        if [ "${target::${#prefix}}" == "$prefix" ]; then
            target="${target:${#prefix}}"
        else
            fatal "error: cannot fix absolute symlink: $msg"
        fi
        echo "$msg >>> $target"
        ln -sf "$target" "$link"
    fi
done
echo

echo

listFiles() {
    title="$1"
    pattern="${2:-$title}"
    echo "*** $title:"
    pushd $base/env/sbin >/dev/null
    if ! ls -l $pattern 2>/dev/null; then
        echo "MISSING -------------------------------> $title"
    fi
    popd >/dev/null
    echo
}

listFiles busybox
listFiles toybox
listFiles f2fs "*f2fs*"
listFiles exfat "*exfat*"
listFiles ntfs "*ntfs*"
listFiles fsck "*fs*ck*"
listFiles mkfs "*mk*fs*"
listFiles fstrim

echo

# signapk messes with permissions so we need to set them by script
find $base/env/sbin $base/env/sbin-extra -type f -execdir chmod +r-x {} +

cat >$base/env-setup/init <<EOF
#####################################################
# Flashize-Env Runtime (${version})                 #
# Copyright 2016, Lanchon                           #
#####################################################

#####################################################
# Flashize is free software licensed under GNU's    #
# General Public License (GPL) version 3 and any    #
# later version.                                    #
# ------------------------------------------------- #
# The Flashize Runtime is free software licensed    #
# under GNU's Lesser General Public License (LGPL)  #
# version 3 and any later version.                  #
#####################################################

EOF
cat >>$base/env-setup/init <<"EOF"
base="/tmp/flashize"

if [ -f env-setup/post-extract ]; then
    source env-setup/post-extract
fi

path="$base/env/sbin-extra:$base/env/sbin"
libpath=""
shell="sh"
shelldebugopts="-x"
shellopts=""
script="env-setup/script"
scriptargs='"$@"'
postsetup="env-setup/post-setup"

env=""
addEnv() {
    env="${env}$1='$2' "
}
addEnvShadow() {
    env="${env}FLASHIZE_$1=\"\$$1\" "
    addEnv "$@"
}

if [ -f env-setup/setup ]; then
    source env-setup/setup
fi

if [ -z "$libpath" ]; then
    libpath="$path"
fi
if [ "${shell::1}" != "/" ]; then
    shell="$base/env/sbin/$shell"
fi
if [ ! -f /tmp/flashize-env-debug ]; then
    shelldebugopts=""
fi
if [ -z "$env" ]; then
    addEnvShadow PATH "$path"
    addEnvShadow LD_LIBRARY_PATH "$libpath"
    addEnvShadow SHELL "$shell"
fi

for linker in "linker linker64"; do
    if [ -f "env/sbin/$linker" ] && [ ! -f "/sbin/$linker" ]; then
        ln -sf "$base/env/sbin/$linker" /sbin/
    fi
done

echo $env '#!/sbin/sh' >env-setup/shell
echo $env "'$shell'" $shelldebugopts $shellopts '"$@"' >>env-setup/shell
chmod +rx env-setup/shell

[ ! -f "$postsetup" ] || eval $env "'$shell'" $shelldebugopts $shellopts "'$postsetup'" "'$base'" "'$script'" $scriptargs &&
eval $env "'$shell'" $shelldebugopts $shellopts "'$script'" $scriptargs

#####################################################
EOF

./make-zip $td "$zip"

cd aik
./cleanup.sh
cd ..

echo
echo

if [ -n "$env" ]; then
    echo "*** env alias:"
    alias="$(dirname "$zip")/$env.zip"
    rm -f "$alias"
    ln -s "$(basename "$zip")" "$alias"
    ls -l "$alias"
    echo
    echo
fi
