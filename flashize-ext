#!/bin/bash

#####################################################
# Flashize-Ext                                      #
# Copyright 2016, Lanchon                           #
#####################################################

#####################################################
# Flashize is free software licensed under GNU's    #
# General Public License (GPL) version 3 and any    #
# later version.                                    #
# ------------------------------------------------- #
# The Flashize Runtime is free software licensed    #
# under GNU's Lesser General Public License (LGPL)  #
# version 3 and any later version.                  #
#####################################################

version="2016-03-22"

set -e
set -o pipefail

script="$1"
inzip="$2"
zip="$3"
log="$4"
srcdir="$5"
destdir="$6"
extras=7

dir="$(dirname "$(readlink -f "$0")")"

error() {
    >&2 echo "$@"
}

fatal() {
    error "$@"
    exit 1
}

if [ "$inzip" == "-" ]; then inzip=""; fi
if [ "$zip" == "-" ]; then zip=""; fi
if [ "$log" == "-" ]; then log=""; fi
if [ "$srcdir" == "-" ]; then srcdir=""; fi
if [ "$destdir" == "-" ]; then destdir=""; fi

if  [ -z "$script" ] || [ -z "$inzip" ] || ([ "$script" == "-" ] && [ -z "$zip" ]) || [ -z "$destdir" ]; then
    error "Flashize-Ext ($version)"
    error
    error "Converts a shell script to a flashable Android recovery zip. The resulting flashable zip"
    error "can automatically extract resources bundled within the zipfile before invoking the script."
    error
    error "Usage: <input-script> <input-zip> <output-zip> <runtime-logfile> <src-dir> <dest-dir> [<extra-src-spec>...]"
    error
    error "Reads the script from standard input if <input-script> is a dash (-)."
    error
    error "Names the output zipfile based on <input-script> if <output-zip> is null or a dash."
    error
    error "Can create a logfile on the device at runtime, according to the value of <runtime-logfile>:"
    error "  -The absolute path of the logfile to be created."
    error "  -A relative path or filename to be interpreted against the path of the zipfile being run."
    error "  -A dot (.) to use the pathname of the zipfile being run with a '.log' extension."
    error "  -Null or a dash to disable logging."
    error
    error "Extracts files from the zip at runtime, according to the value of <src-dir>:"
    error "  -Null or a dash: changes to <dest-dir> and extracts files matching <extra-src-spec> there."
    error "  -A path within the zip: changes to <dest-dir>/<src-dir>, wipes its contents and extracts"
    error "   <src-dir> there. Also extracts files matching <extra-src-spec> to <dest-dir>."
    fatal
fi

if [ "$script" != "-" ] && [ ! -f "$script" ]; then
    fatal "error: script not found"
fi

if [ ! -f "$inzip" ]; then
    fatal "error: input zip not found"
fi

if [ "${srcdir::1}" == "/" ]; then
    fatal "error: source directory must be relative"
fi

if [ "${destdir::1}" != "/" ]; then
    fatal "error: destination directory must be absolute"
fi

if [ -z "$zip" ]; then
    zip="$(dirname "$script")/$(basename "$script" .sh).zip"
fi

srcdir="${srcdir%/}"
destdir="${destdir%/}/"

tmpzip="$zip.tmp"

rm -f "$zip" "$tmpzip"

cp -T "$inzip" "$tmpzip"

(
    cat <<EOF
#####################################################
# Flashize-Ext Runtime (${version})                 #
# Copyright 2016, Lanchon                           #
#####################################################

export FLASHIZE_EXT_VERSION="$version"
EOF
    if [ -z "$srcdir" ]; then
        cat <<EOF
mkdir -p "$destdir" &&
cd "$destdir" &&
unzip -oq "\$1" -d "$destdir"\\
EOF
    else
        targetdir="${destdir}$srcdir"
        cat <<EOF
rm -rf "$targetdir" &&
mkdir -p "$targetdir" &&
cd "$targetdir" &&
unzip -oq "\$1" -d "$destdir" "$srcdir/*"\\
EOF
    fi
    for extra in "${@:$extras}"; do
        echo -n " \"$extra\""
    done
    echo
    cat <<EOF
if [ \$? -ne 0 ]; then
    >&2 echo "flashize-ext: unable to extract package contents"
    exit 1
fi
[ ! -f /tmp/flashize-ext-debug ] || set -x

#####################################################

EOF
    cat "$script"
) | "$dir/flashize" - "$tmpzip" "$log"

mv "$tmpzip" "$zip"
